//  // 0.RESET = 1 
D40000 // 1101-0100 0000 0000-0000 0100 // 1.LD ACC IMM(0100) /*ACC = 4*/ ----PC = 0 
510104 // 0101-0001 0000 0001-0000 0100 // 2.MOV REG01 ACC /* R1 = 4 */    --- PC = 1 and will increment at each instruction afterwards         
DA0204 // 1101-1010 0000 0010-0000 1010 // 3.LD ACC IMM(1010) /*ACC = 10 */ 
52030A // 0101-0010 0000 0011-0000 1010 // 4.MOV REG02 ACC /* R2 = 10 */ 
D2040A // 1101-0010 0000 0100-0000 0010 // 5.LD ACC IMM(0010) 
530502 // 0101-0011 0000 0101-0000 0010 // 6.MOV REG03 ACC /* R3 = 2 */ 
210602 // 0010-0001 0000 0110-0000 0010 // 7.SUB REG01 ACC /*ACC = ACC - REG01 = 2 - 4 */ 
8207FE // 1000-0010 0000 0111-0000 0010 // 8.JC REG02 /*check if PCOUT is 1010*/ ----- PC = 7 
D90AFE // 1101-1001 0000 1010-0000 1001 // 9.LD ACC IMM(1001) ---- PC = 10 (PC jumped from 7 to 10) 
B00B09 // 1011-**** 0000 1011-0001 0010 // 10.SHL ACC ---- PC = 11 
B00C12 // 1011-**** 0000 1100-0010 0100 // 11.SHL ACC ---- PC = 12 
B00D24 // 1011-**** 0000 1101-0100 1000 // 12.SHL ACC 
B00E48 // 1011-**** 0000 1110-1001 0000 // 13.SHL ACC 
500F90 // 0101-0000 0000 1111-1001 0000 // 14.MOV REG00 ACC /*R0 = 10010000*/ 
421090 // 0100-0011 0001 0000-0000 0010 // 15.MOV ACC REG03 /* ACC = 2 */ 
131102 // 0001-0011 0001 0001-0000 0100 // 16.ADD ACC REG03 /*ACC = 4 */ 
211204 // 0010-0001 0001 0010-0000 0000 // 17.SUB REG01 ACC /* ACC = ACC - R1 = 4 - 4 */ 
751300 // 0111-0101 0001 0011-0000 0000 // 18.JZ IMM(0101) /*check if PCOUT is 0101*/ ---- PC = 19  
DD0500 // 1101-1101 0000 0101-0000 1101 // 19.LD ACC IMM(1101) /* ACC = 1101 */   ---- PC = 5 (PC jumped from 19 to 5) 
10069D // 0001-0000 0000 0110-1001 1101 // 20.ADD REG00 ACC /* ACC = 10011101 */  --- PC = 6 
50079D // 0101-0000 0000 0111-1001 1101 // 21.MOV REG00 ACC  
F0089D // 1111-**** 0000 1000-1001 1101 // 22.Halt
00089D //
//HexCode//  Op -Reg#    PC    -   ACC    // 